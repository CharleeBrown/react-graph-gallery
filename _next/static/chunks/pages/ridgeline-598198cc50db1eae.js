(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2990],{4624:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/ridgeline",function(){return n(1122)}])},1122:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return A}});var i=n(5893),r=n(7294),a=n(4813),s=n(8807),o=n(6978),l=n(7197),d=n(3485),h=n(8193),c=n(33),u=n(4722),p=n(1664),m=[{key:"Almost Certainly",values:[95,95,95,95,98,95,85,97,95,90,90,99,60,88.7,99,95,97,99,95,95,90,92,98,98,90,95,95,98,85,80,98,96,99,85,90,95,98,98,80,95,99,85,90,95,85,95]},{key:"Highly Likely",values:[80,75,85,85,95,99,95,95,95,85,90,97,80,69,98,90,90,95,95,90,80,85,90,92,90,85,90,95,85,15,80,85,85,84,95,85,96,96,90,90,90,80,70,80,90,80]},{key:"Very Good Chance",values:[85,75,85,85,80,85,65,75,80,90,85,70,70,80,85,80,70,75,90,75,80,75,75,91,75,80,80,75,90,74,75,80,75,87,80,80,90,82,70,90,80,80,80,90,75,75]},{key:"Probable",values:[75,51,70,70,70,90,80,70,70,70,70,75,70,51,85,70,51,60,60,80,75,60,80,85,75,75,60,85,60,65,65,75,80,50,70,64,90,75,80,80,90,70,75,75,65,75]},{key:"Likely",values:[66,75,75,75,70,75,40,70,65,75,60,75,60,70,75,70,65,65,80,75,80,70,85,85,65,65,75,90,65,65,70,70,75,60,90,80,90,86,80,90,60,70,70,70,65,60]},{key:"Probably",values:[75,51,70,70,75,75,45,80,80,70,75,75,55,60,65,80,60,75,75,75,75,60,85,85,80,75,60,85,76,65,55,90,90,65,60,80,80,80,80,90,50,70,65,75,60,68]},{key:"We Believe",values:[66,51,80,80,65,80,80,75,65,65,80,90,60,50,5,85,75,80,75,50,60,85,85,70,80,50,60,75,50,60,60,80,50,50,60,75,70,45,70,85,90,65,70,100,95,55]},{key:"Better Than Even",values:[55,51,60,60,60,65,60,55,55,60,60,67,55,5,65,60,51,55,60,50.1,60,57,60,60,60,60,51,98,51,60,55,60,51,60,80,80,53,69,60,55,60,51,60,60,55,51]},{key:"About Even",values:[50,50,50,50,50,50,45,50,50,52,50,50,50,50,50,50,50,50,50,50,50,50,49,50,50,50,50,50,50,50,50,50,50,50,40,50,50,52,50,48,50,45,50,50,50,49]},{key:"We Doubt",values:[40,20,30,30,10,7,45,25,20,60,25,17,20,30,100,30,5,25,25,25,40,25,5,30,12,33,10,40,33,38,25,5,1,60,25,10,40,21,10,15,40,30,15,10,95,25]},{key:"Improbable",values:[20,49,10,10,50,15,35,30,30,20,1,10,5,49,1,40,10,3,10,20,30,33,15,7,25,10,49,7,25,29,20,9,.001,3,3,10,4,12,0,20,20,15,35,5,5,20]},{key:"Unlikely",values:[30,25,25,25,5,8,20,15,35,30,15,10,30,20,10,30,15,15,10,25,10,10,2,18,35,25,20,10,25,36,12,3,10,24,5,25,30,34,20,35,10,35,20,10,20,35]},{key:"Probably Not",values:[15,49,25,25,20,15,40,25,35,45,40,25,30,40,100,40,10,30,20,49.9,25,10,10,27,30,25,40,25,20,34,35,20,10,30,20,20,30,26,30,15,40,30,25,20,40,40]},{key:"Little Chance",values:[20,5,20,20,5,5,20,20,15,20,20,17,10,13,100,15,15,10,25,25,20,7,2,17,20,10,15,10,10,29,15,20,5,20,4,8,8,18,10,15,5,10,5,10,25,17]},{key:"Almost No Chance",values:[5,5,1,1,1,1,10,3,5,10,15,2,5,2,95,1,2,1,5,5,5,3,5,2,2,2,5,2,1,7,1,10,.05,5,2,2,1,7,1,5,1,5,2,1,2,5]},{key:"Highly Unlikely",values:[25,10,5,5,2,3,20,5,15,6,10,3,5,3,90,5,7,5,5,5,5,3,5,3,10,5,20,5,15,15,8,5,10,15,2,5,5,3,10,8,30,15,10,5,5,10]},{key:"Chances Are Slight",values:[25,5,15,15,10,20,30,10,10,25,15,5,15,5,35,10,5,40,10,10,5,13,5,10,20,5,10,5,15,30,15,12,5,30,30,5,10,13,10,10,15,20,10,5,10,15]}],f=n(2535);function y(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var g={top:90,right:30,bottom:40,left:120},x=[-20,120],v=function(e){var t,n,a=e.width,s=e.height,o=e.data,l=(0,r.useRef)(null),d=a-g.right-g.left,h=s-g.top-g.bottom,c=o.map((function(e){return e.key})),u=(0,r.useMemo)((function(){return f.BYU().domain(x).range([10,d]).nice()}),[o,a]);(0,r.useEffect)((function(){var e=f.Ys(l.current);e.selectAll("*").remove();var t=f.LLu(u);e.append("g").attr("transform","translate(0,"+(h+20)+")").call(t)}),[u,h]);var p=(0,r.useMemo)((function(){var e,t,n,i=(n=7,e=function(e){return Math.abs(e/=n)<=1?.75*(1-e*e)/n:0},t=u.ticks(40),function(n){return t.map((function(t){return[t,f.J69(n,(function(n){return e(t-n)}))]}))});return o.map((function(e){return{key:e.key,density:i(e.values)}}))}),[u,o]),m=(n=Math).max.apply(n,y(p.map((function(e){return(t=Math).max.apply(t,y(e.density.map((function(e){return e[1]}))))})))),v=f.BYU().domain([0,m]).range([100,0]),j=f.tiA().domain(c).range([0,h]).paddingInner(1),k=(0,r.useMemo)((function(){var e=f.jvg().x((function(e){return u(e[0])})).y((function(e){return v(e[1])})).curve(f.$0Z);return p.map((function(t,n){var r=e(t.density);return(0,i.jsx)("path",{d:r,transform:"translate(0,"+(j(t.key)-100)+")",fill:"purple",opacity:.8,stroke:"black",strokeWidth:.3,strokeLinejoin:"round"},n)}))}),[p]),w=(0,r.useMemo)((function(){return p.map((function(e,t){return(0,i.jsx)("text",{x:-5,y:j(e.key),textAnchor:"end",dominantBaseline:"middle",fontSize:10,children:e.key},t)}))}),[p]);return(0,i.jsxs)("svg",{width:a,height:s,children:[(0,i.jsxs)("g",{width:d,height:h,transform:"translate(".concat([g.left,g.top].join(","),")"),children:[k,w]}),(0,i.jsx)("g",{width:d,height:h,ref:l,transform:"translate(".concat([g.left,g.top].join(","),")")})]})};var j=function(e){var t=e.width,n=void 0===t?700:t,r=e.height,a=void 0===r?400:r;return(0,i.jsx)(v,{width:n,height:a,data:m})},k=n(2173),w=(0,i.jsxs)("p",{children:["This page explains how to build a"," ",(0,i.jsx)("a",{href:"https://www.data-to-viz.com/graph/ridgeline.html",children:"ridgeline chart"})," ","using",(0,i.jsx)("code",{children:"react"})," and ",(0,i.jsx)("code",{children:"d3.js"}),". It starts by describing how the input data must be formatted and reminds how to build a"," ",(0,i.jsx)(p.default,{href:"/density-plot",children:"density"})," chart. It then explains how to stack those densities to get a ridgeline plot."]}),b='\nexport const data = [\n  {\n    group: "A",\n    values: [0, 0, 2, 2, 2, 0, 0, 1],\n  },\n  {\n    group: "B",\n    values: [19, 20, 19, 18, 18],\n  }\n];\n'.trim();function A(){return(0,i.jsxs)(a.A,{title:"Ridgeline chart with React",seoDescription:"How to build a ridgeline plot with React and D3.js. A set of re-usable components",children:[(0,i.jsx)(s.Z,{title:"Ridgeline chart",description:w,chartType:"ridgeline"}),(0,i.jsxs)(d.U,{title:"Dataset",startOpen:!0,children:[(0,i.jsx)("p",{children:"To build a ridgeline chart, the input dataset must provide a set of numeric values for several groups."}),(0,i.jsxs)("p",{children:["The best way to format this kind of information is with an array of object, with 1 object per group. For each group, a ",(0,i.jsx)("code",{children:"key"})," ","property provides the group name, and a ",(0,i.jsx)("code",{children:"values"})," property provides the values."]}),(0,i.jsx)("br",{}),(0,i.jsx)("p",{children:"Here is a minimal example of the data structure:"}),(0,i.jsx)(h.d,{code:b})]}),(0,i.jsxs)(d.U,{title:"Computing and plotting a density",startOpen:!0,children:[(0,i.jsxs)("p",{children:["A ridgeline chart is actually just a set of density plots, stacked one on top of each other. It is thus important to start by learning how to compute a kernel density, and how to transform it in a svg"," ",(0,i.jsx)("code",{children:"path"})," rendered with react."," "]}),(0,i.jsxs)("p",{children:["The ",(0,i.jsx)(p.default,{href:"/density-plot",children:"density chart"})," section of the gallery thoroughly explains how to compute this"," ",(0,i.jsx)("a",{href:"https://en.wikipedia.org/wiki/Kernel_density_estimation",children:"kernel density"})," ","estimation of a set of numeric values."]}),(0,i.jsx)("p",{children:"This is how the result looks like:"}),(0,i.jsx)(c.$,{VizComponent:u.m,vizName:"DensityChartBasic",maxWidth:600,height:300,caption:"A ridgeline chart is a set of densities stacked one on top of each other. This minimal example shows how to compute and plot this density for a single group."})]}),(0,i.jsxs)(d.U,{title:"Stacking the densities",startOpen:!0,children:[(0,i.jsx)("h3",{children:"\u2192 Two Y scales"}),(0,i.jsx)("p",{children:"It's important to understand that 2 Y scales are necessary to compute a ridgeline chart."}),(0,i.jsxs)("p",{children:["The first one is used many times, to compute each density. It's a"," ",(0,i.jsx)("code",{children:"scaleLinear"}),"scale."]}),(0,i.jsxs)("p",{children:["The second is used once to shift each group baseline and create the slight overlap. It's a ",(0,i.jsx)("code",{children:"scaleBand"}),": each band of the Y axis is dedicated to a group."]}),(0,i.jsx)("h3",{children:"\u2192 Axis"}),(0,i.jsxs)("p",{children:["It's important to display a Y axis to understand what we are looking at. In the example below the ",(0,i.jsx)("code",{children:"axisBottom"})," imperative method of d3 is used in a ",(0,i.jsx)("code",{children:"useEffect"})," hook, but you can definitely create the axis using react like suggested"," ",(0,i.jsx)(p.default,{href:"/build-axis-with-react",children:"here"}),"."]}),(0,i.jsxs)("p",{children:["For the Y axis labels, I suggest to add them using some"," ",(0,i.jsx)("code",{children:"text"})," svg elements."]}),(0,i.jsx)(c.$,{VizComponent:j,vizName:"RidgelineBasic",maxWidth:800,height:500,caption:(0,i.jsxs)("span",{children:["A ridgeline chart showing how various probability related words are perceived by humans. (",(0,i.jsx)("a",{href:"https://www.data-to-viz.com/graph/ridgeline.html",children:"more"}),")"]})})]}),(0,i.jsx)(k.r,{chartId:"ridgeline"}),(0,i.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 my-3"}),(0,i.jsx)(l.Z,{chartFamily:"distribution"}),(0,i.jsx)("div",{className:"mt-20"}),(0,i.jsx)(o.Z,{})]})}}},function(e){e.O(0,[3888,5660,4509,5884,6523,9774,2888,179],(function(){return t=4624,e(e.s=t);var t}));var t=e.O();_N_E=t}]);