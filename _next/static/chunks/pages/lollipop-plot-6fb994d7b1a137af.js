(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5764],{3820:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/lollipop-plot",function(){return t(6120)}])},2173:function(e,n,t){"use strict";t.d(n,{r:function(){return l}});var i=t(5893),r=t(1664),s=t(1878),o=t(3359),a=t(8193),l=function(e){var n=e.chartId,t=s.c.filter((function(e){return e.id===n}))[0].label;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{id:"responsiveness",children:"Responsive "+t+" with react"}),(0,i.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"})," and will render a ",t," of those dimensions."]}),(0,i.jsxs)("p",{children:["Making the ",t," responsive requires adding a ",(0,i.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,i.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,i.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,i.jsx)(o.U,{startOpen:!1,title:(0,i.jsxs)("span",{children:[(0,i.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,i.jsx)(a.d,{code:d})}),(0,i.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,i.jsx)(r.default,{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]})},d='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},3359:function(e,n,t){"use strict";t.d(n,{U:function(){return r}});var i=t(5893),r=function(e){e.startOpen;var n=e.title,t=e.children;return(0,i.jsxs)("details",{className:"bg-gray-50 py-2 px-4 rounded-md my-2",children:[(0,i.jsx)("summary",{className:"cursor-pointer",children:n}),t]})}},6120:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return b}});var i=t(5893),r=t(7294),s=t(1884),o=t(8807),a=t(7197),l=t(8193),d=t(33),h=t(1664),c=t(3440),p=[{name:"Mark",value:90},{name:"Robert",value:12},{name:"Emily",value:34},{name:"Marion",value:53},{name:"Nicolas",value:98},{name:"M\xe9lanie",value:23},{name:"Gabriel",value:18},{name:"Jean",value:104},{name:"Paul",value:2}],u=t(2989);function m(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],i=!0,r=!1,s=void 0;try{for(var o,a=e[Symbol.iterator]();!(i=(o=a.next()).done)&&(t.push(o.value),!n||t.length!==n);i=!0);}catch(l){r=!0,s=l}finally{try{i||null==a.return||a.return()}finally{if(r)throw s}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var x={top:30,right:30,bottom:30,left:80},j=function(e){var n=e.width,t=e.height,s=e.data,o=n-x.right-x.left,a=t-x.top-x.bottom,l=s.sort((function(e,n){return n.value-e.value})).map((function(e){return e.name})),d=(0,r.useMemo)((function(){return u.tiA().domain(l).range([0,a])}),[s,t]),h=(0,r.useMemo)((function(){var e=m(u.Wem(s.map((function(e){return e.value}))),2),n=(e[0],e[1]);return u.BYU().domain([0,n||10]).range([0,o])}),[s,n]),c=s.map((function(e,n){var t=d(e.name)+d.bandwidth()/2;return(0,i.jsxs)("g",{children:[(0,i.jsx)("line",{x1:h(0),y1:t,y2:t,x2:h(e.value),opacity:.7,stroke:"#9d174d",strokeWidth:1}),(0,i.jsx)("circle",{cy:t,cx:h(e.value),opacity:.7,stroke:"#9d174d",fill:"#9d174d",strokeWidth:1,r:3}),(0,i.jsx)("text",{x:h(0)-7,y:t,textAnchor:"end",alignmentBaseline:"central",fontSize:12,children:e.name})]},n)})),p=h.ticks(5).slice(1).map((function(e,n){return(0,i.jsxs)("g",{children:[(0,i.jsx)("line",{x1:h(e),x2:h(e),y1:0,y2:a,stroke:"#808080",opacity:.2}),(0,i.jsx)("text",{x:h(e),y:a+10,textAnchor:"middle",alignmentBaseline:"central",fontSize:9,stroke:"#808080",opacity:.8,children:e})]},n)}));return(0,i.jsx)("div",{children:(0,i.jsx)("svg",{width:n,height:t,children:(0,i.jsxs)("g",{width:o,height:a,transform:"translate(".concat([x.left,x.top].join(","),")"),children:[p,c]})})})},f=function(e){var n=e.width,t=void 0===n?700:n,r=e.height,s=void 0===r?400:r;return(0,i.jsx)(j,{data:p,width:t,height:s})},g=t(2173),v=(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("p",{children:["A"," ",(0,i.jsx)("a",{href:"https://www.data-to-viz.com/graph/lollipop.html",children:"lollipop plot"})," ","is a variation of the more common ",(0,i.jsx)(h.default,{href:"barplot",children:"barplot"}),". This page is a step-by-step guide on how to build your own lollipop for the web, using ",(0,i.jsx)("a",{href:"https://reactjs.org/",children:"React"})," and"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com/histogram",children:"D3.js"}),"."]}),(0,i.jsxs)("p",{children:["It starts by describing how the ",(0,i.jsx)("b",{children:"data"})," should be organized and how to initialize the ",(0,i.jsx)("b",{children:"lollipop component"}),". It explains how to build the"," ",(0,i.jsx)("b",{children:"scales"})," and ",(0,i.jsx)("b",{children:"axes"})," and how to add the shapes. A few variations are described and a focus is made on the ",(0,i.jsx)("b",{children:"hover interaction"}),". \ud83d\ude47\u200d\u2642\ufe0f."]})]});function b(){return(0,i.jsxs)(s.A,{title:"Lollipop plot with React",seoDescription:"How to build a lollipop plot with React and D3.js. A set of re-usable components",children:[(0,i.jsx)(o.Z,{title:"Lollipop plot",description:v,chartType:"lollipop"}),(0,i.jsx)("h2",{id:"data",children:"The Data"}),(0,i.jsxs)("p",{children:["The dataset required to build a lollipop is usually an array where each item is an object providing the ",(0,i.jsx)("code",{children:"name"})," and the"," ",(0,i.jsx)("code",{children:"value"})," of the group."]}),(0,i.jsx)("br",{}),(0,i.jsx)("p",{children:"Here is a minimal example:"}),(0,i.jsx)(l.d,{code:w}),(0,i.jsxs)("p",{children:["Note: if your data is in ",(0,i.jsx)("code",{children:".csv"})," format, you can translate it thanks to the ",(0,i.jsx)("code",{children:"d3.csv()"})," function as suggested"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com/graph/barplot_horizontal.html",children:"here"}),"."]}),(0,i.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,i.jsxs)("p",{children:["The goal here is to create a ",(0,i.jsx)("code",{children:"Lollipop"})," component that will be stored in a ",(0,i.jsx)("code",{children:"Lollipop.tsx"})," file. This component requires 3 props to render: a ",(0,i.jsx)("code",{children:"width"}),", a ",(0,i.jsx)("code",{children:"height"}),", and some"," ",(0,i.jsx)("code",{children:"data"}),"."]}),(0,i.jsxs)("p",{children:["The shape of the ",(0,i.jsx)("code",{children:"data"})," is described above. The"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"})," will be used to render an"," ",(0,i.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the histogram."]}),(0,i.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our"," ",(0,i.jsx)("code",{children:"Lollipop"})," component:"]}),(0,i.jsx)(l.d,{code:y}),(0,i.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the SVG ",(0,i.jsx)("code",{children:"circle"}),", but it's React that will render them in the ",(0,i.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,i.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,i.jsx)("a",{href:"https://www.d3-graph-gallery.com",children:"d3.js examples"}),"."]}),(0,i.jsx)("h2",{id:"Basic lollipop",children:"Most basic lollipop"}),(0,i.jsxs)("p",{children:["There is nothing really tricky when it comes to build a basic barplot with react, all is pretty close to the"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com/barplot",children:"d3-only examples"}),"."]}),(0,i.jsx)(d.$,{vizName:"LollipopBasic",VizComponent:f,height:400,maxWidth:600,caption:"Most basic Lollipop built with d3.js for scales, and react for rendering"}),(0,i.jsx)(g.r,{chartId:"lollipop"}),(0,i.jsx)(c.Z,{chartId:"lollipop"}),(0,i.jsx)("h2",{id:"vertical",children:"Vertical lollipop"}),(0,i.jsx)("p",{children:"The vertical option is less common since it makes is much harder to read the labels. But if you really need it, it is just a matter of swaping the X and Y axes of the previous example. Here is a working version."}),(0,i.jsx)("br",{}),(0,i.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,i.jsx)(a.Z,{chartFamily:"ranking"}),(0,i.jsx)("div",{className:"mt-20"})]})}var w='\nconst data = [\n  {name:"Mark", value: 90},\n  {name:"Robert", value: 12},\n  {name:"Emily", value: 34},\n  {name:"Marion", value: 53},\n  {name:"Nicolas", value: 98},\n]\n'.trim(),y='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype LollipopProps = {\n  width: number;\n  height: number;\n  data: number[];\n};\n\nexport const Lollipop = ({ width, height, data }: LollipopProps) => {\n\n  // read the data\n  // build the scales\n  // build the lines and circles\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render axes\n        // render all the lines and rects\n      </svg>\n    </div>\n  );\n};\n'.trim()}},function(e){e.O(0,[2781,5660,358,5443,9774,2888,179],(function(){return n=3820,e(e.s=n);var n}));var n=e.O();_N_E=n}]);